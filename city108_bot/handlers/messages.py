from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
from datetime import datetime, timedelta
from utils.supabase import supabase, user_last_active, SESSION_TIMEOUT
from utils.helpers import extract_name

# –ü–æ—Ä—è–¥–æ–∫ –¥–∏–∞–ª–æ–≥–∞ –∏ –≤–æ–ø—Ä–æ—Å—ã
DIALOG_STEPS = ["preferred_form", "source", "interests", "skills"]
QUESTIONS = {
    "preferred_form": "–°–∫–∞–∂–∏, –∫–∞–∫ –º–Ω–µ –∫ —Ç–µ–±–µ –æ–±—Ä–∞—â–∞—Ç—å—Å—è? üòä",
    "source": "–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, {name}! –ê –∫–∞–∫ —Ç—ã —É–∑–Ω–∞–ª –æ –Ω–∞—à–µ–º –≥–æ—Ä–æ–¥–µ City_108?",
    "interests": "–ó–¥–æ—Ä–æ–≤–æ! –ê —á–µ–º –±—ã —Ç—ã —Ö–æ—Ç–µ–ª –∑–∞–Ω–∏–º–∞—Ç—å—Å—è –≤ –≥–æ—Ä–æ–¥–µ? –ü–æ–¥–µ–ª–∏—Å—å —Å–≤–æ–∏–º–∏ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º–∏. üéØ",
    "skills": "–û—Ç–ª–∏—á–Ω–æ, –∞ –∫–∞–∫–∏–µ —É —Ç–µ–±—è –µ—Å—Ç—å –Ω–∞–≤—ã–∫–∏? –£–∫–∞–∂–∏ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é. üõ†"
}

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    telegram_id = user.id
    text = update.message.text.strip()

    now = datetime.utcnow()
    if telegram_id in user_last_active and now - user_last_active[telegram_id] > timedelta(seconds=SESSION_TIMEOUT):
        keyboard = [[InlineKeyboardButton("üîÑ START", callback_data="start")]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await update.message.reply_text("–°–µ—Å—Å–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –ø–æ —Ç–∞–π–º–µ—Ä—É. –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ:", reply_markup=reply_markup)
        return
    user_last_active[telegram_id] = now

    result = supabase.table("guests").select("*").eq("id_telegram", telegram_id).execute()
    if not result.data:
        keyboard = [[InlineKeyboardButton("START", callback_data="start")]]
        await update.message.reply_text("–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é:", reply_markup=InlineKeyboardMarkup(keyboard))
        return

    guest = result.data[0]
    update_data = {}

    for field in DIALOG_STEPS:
        if not guest.get(field) or (field == "preferred_form" and guest[field] == guest.get("temp_name")):
            if field == "preferred_form":
                name = extract_name(text)
                update_data[field] = name
                reply = QUESTIONS[field]
            elif field in ["interests", "skills"]:
                values = [i.strip() for i in text.split(',') if i.strip()]
                update_data[field] = values
                reply = QUESTIONS[field]
            else:
                update_data[field] = text
                name = guest.get("preferred_form", "–¥—Ä—É–≥")
                reply = QUESTIONS[field].format(name=name)

            supabase.table("guests").update(update_data).eq("id_telegram", telegram_id).execute()

            next_index = DIALOG_STEPS.index(field) + 1
            if next_index < len(DIALOG_STEPS):
                next_field = DIALOG_STEPS[next_index]
                await update.message.reply_text(reply)
            else:
                await update.message.reply_text("–ë–ª–∞–≥–æ–¥–∞—Ä—é —Ç–µ–±—è –∑–∞ –æ—Ç–≤–µ—Ç—ã üôè –ï—Å–ª–∏ —Ö–æ—á–µ—à—å ‚Äî –º–æ–≥—É —Å–≤—è–∑–∞—Ç—å —Ç–µ–±—è —Å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º –ª–∏—á–Ω–æ.")
            return

    await update.message.reply_text("–Ø –Ω–∞ —Å–≤—è–∑–∏, –µ—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã! üí¨")
