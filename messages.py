from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
from datetime import datetime, timedelta
from utils.supabase import supabase, user_last_active, SESSION_TIMEOUT
from utils.helpers import extract_name

dialog_steps = ["preferred_form", "source", "interests", "skills"]
questions = {
    "preferred_form": "–ö–∞–∫ –º–Ω–µ –∫ —Ç–µ–±–µ –æ–±—Ä–∞—â–∞—Ç—å—Å—è?",
    "source": "–û—Ç–∫—É–¥–∞ —Ç—ã —É–∑–Ω–∞–ª –æ –≥–æ—Ä–æ–¥–µ City_108?",
    "interests": "–ö–∞–∫–∏–µ —É —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—ã? –£–∫–∞–∂–∏ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é.",
    "skills": "–ö–∞–∫–∏–µ —É —Ç–µ–±—è –µ—Å—Ç—å –Ω–∞–≤—ã–∫–∏? –£–∫–∞–∂–∏ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é."
}

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    telegram_id = user.id
    text = update.message.text.strip()

    now = datetime.utcnow()
    if telegram_id in user_last_active and now - user_last_active[telegram_id] > timedelta(seconds=SESSION_TIMEOUT):
        keyboard = [[InlineKeyboardButton("üîÑ START", callback_data="start")]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await update.message.reply_text("–°–µ—Å—Å–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –ø–æ —Ç–∞–π–º–µ—Ä—É. –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ:", reply_markup=reply_markup)
        return
    user_last_active[telegram_id] = now

    result = supabase.table("guests").select("*").eq("id_telegram", telegram_id).execute()
    if not result.data:
        keyboard = [[InlineKeyboardButton("START", callback_data="start")]]
        await update.message.reply_text("–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é:", reply_markup=InlineKeyboardMarkup(keyboard))
        return

    guest = result.data[0]
    update_data = {}

    for field in dialog_steps:
        if not guest.get(field) or (field == "preferred_form" and guest[field] == guest["temp_name"]):
            if field == "preferred_form":
                update_data[field] = extract_name(text)
            elif field in ["interests", "skills"]:
                update_data[field] = [i.strip() for i in text.split(',') if i.strip()]
            else:
                update_data[field] = text.strip()
            supabase.table("guests").update(update_data).eq("id_telegram", telegram_id).execute()
            next_index = dialog_steps.index(field) + 1
            if next_index < len(dialog_steps):
                next_field = dialog_steps[next_index]
                await update.message.reply_text(questions[next_field])
            else:
                await update.message.reply_text("–°–ø–∞—Å–∏–±–æ! –¢—ã –º–æ–∂–µ—à—å –ø–æ–æ–±—â–∞—Ç—å—Å—è —Å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º, –µ—Å–ª–∏ —Ö–æ—á–µ—à—å.")
            return

    await update.message.reply_text("–ï—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã ‚Äî —è –≤—Å–µ–≥–¥–∞ –Ω–∞ —Å–≤—è–∑–∏!")
