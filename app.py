import os
from datetime import datetime
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
from supabase import create_client

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Supabase –∏ Telegram
SUPABASE_URL = os.getenv("SUPABASE_URL")
SUPABASE_KEY = os.getenv("SUPABASE_KEY")
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")

supabase = create_client(SUPABASE_URL, SUPABASE_KEY)

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    telegram_id = update.effective_user.id
    full_name = update.effective_user.full_name

    user = supabase.table("guest").select("*").eq("telegram_id", telegram_id).execute().data

    if user:
        user = user[0]
        await update.message.reply_text(f"–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {user['full_name']}! üëã –¢—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ City_108 –∫–∞–∫ –≥–æ—Å—Ç—å.")
        supabase.table("guest").update({"last_active": datetime.utcnow().isoformat()}).eq("telegram_id", telegram_id).execute()
    else:
        supabase.table("guest").insert({
            "telegram_id": telegram_id,
            "full_name": full_name,
            "status": "guest",
            "created_at": datetime.utcnow().isoformat(),
            "last_active": datetime.utcnow().isoformat(),
            "return_count": 1
        }).execute()

        await update.message.reply_text(
            "Welcome to City_108! I'm Evyk, the mayor of this digital city. It's wonderful to meet you. "
            "How may I address you? Could you tell me your name or nickname?"
        )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    telegram_id = update.effective_user.id
    text = update.message.text

    user_result = supabase.table("guest").select("*").eq("telegram_id", telegram_id).execute().data
    if not user_result:
        await update.message.reply_text("You are not registered yet. Please type /start.")
        return

    user = user_result[0]

    if not user.get('language'):
        supabase.table("guest").update({"language": text}).eq("telegram_id", telegram_id).execute()
        await update.message.reply_text("–°–ø–∞—Å–∏–±–æ! –¢–µ–ø–µ—Ä—å —Å–∫–∞–∂–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–∫—É–¥–∞ —Ç—ã —É–∑–Ω–∞–ª –æ City_108?")
    elif not user.get('source'):
        supabase.table("guest").update({"source": text}).eq("telegram_id", telegram_id).execute()
        await update.message.reply_text("–û—Ç–ª–∏—á–Ω–æ! –£ —Ç–µ–±—è –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –æ –≥–æ—Ä–æ–¥–µ? –ó–∞–¥–∞–≤–∞–π!")
    elif not user.get('interests'):
        interests = text.split(', ')
        supabase.table("guest").update({"interests": interests}).eq("telegram_id", telegram_id).execute()
        await update.message.reply_text("–°–ø–∞—Å–∏–±–æ! –¢–µ–ø–µ—Ä—å —Ä–∞—Å—Å–∫–∞–∂–∏ –Ω–µ–º–Ω–æ–≥–æ –æ —Å–≤–æ–∏—Ö –Ω–∞–≤—ã–∫–∞—Ö –∏–ª–∏ –æ–ø—ã—Ç–µ, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å —Ç–≤–æ–∏–º–∏ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º–∏.")
    elif not user.get('skills'):
        skills = text.split(', ')
        supabase.table("guest").update({"skills": skills}).eq("telegram_id", telegram_id).execute()
        await update.message.reply_text("–ó–¥–æ—Ä–æ–≤–æ! –•–æ—á–µ—à—å –ª–∏ —Ç—ã –ø–æ–æ–±—â–∞—Ç—å—Å—è —Å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º –Ω–∞–ø—Ä—è–º—É—é?")
    else:
        if text.lower() in ['–¥–∞', 'yes']:
            await update.message.reply_text("–û—Ç–ª–∏—á–Ω–æ! –Ø —Å–æ–æ–±—â—É –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É, –∏ –æ–Ω —Å–≤—è–∂–µ—Ç—Å—è —Å —Ç–æ–±–æ–π —Å–∫–æ—Ä–æ.")
        else:
            await update.message.reply_text(
                f"–•–æ—Ä–æ—à–æ, {user['full_name']}, —è —É–≤–∞–∂–∞—é —Ç–≤–æ—ë —Ä–µ—à–µ–Ω–∏–µ. City_108 –≤—Å–µ–≥–¥–∞ –æ—Ç–∫—Ä—ã—Ç –¥–ª—è —Ç–µ–±—è. "
                "–ë—É–¥—É —Ä–∞–¥ –≤–∏–¥–µ—Ç—å —Ç–µ–±—è —Å–Ω–æ–≤–∞. –ñ–µ–ª–∞—é —Ö–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!"
            )

    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    supabase.table("guest").update({"last_active": datetime.utcnow().isoformat(), "return_count": user['return_count'] + 1}).eq("telegram_id", telegram_id).execute()

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("–≠–≤–∏–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ –∂–¥—ë—Ç –≥–æ—Å—Ç–µ–π –≤ City_108.")
    app.run_polling()
