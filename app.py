import os
from datetime import datetime
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
from supabase import create_client, Client

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase
SUPABASE_URL = os.environ.get("SUPABASE_URL")
SUPABASE_KEY = os.environ.get("SUPABASE_KEY")
supabase: Client = create_client(SUPABASE_URL, SUPABASE_KEY)

# Telegram —Ç–æ–∫–µ–Ω
TELEGRAM_TOKEN = os.environ.get("TELEGRAM_TOKEN")

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    full_name = update.effective_user.full_name

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ
    result = supabase.table("users").select("*").eq("telegram_id", user_id).execute()

    if result.data:
        user = result.data[0]
        await update.message.reply_text(
            f"–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {user['full_name']}! üëã\n"
            f"–¢—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ –≥–æ—Ä–æ–¥–µ City_108 –∫–∞–∫ {user['status']}."
        )
        # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        supabase.table("users").update({
            "last_active": datetime.utcnow().isoformat()
        }).eq("telegram_id", user_id).execute()

    else:
        # –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ‚Äî —Å–æ–∑–¥–∞—ë–º –∫–∞–∫ –≥–æ—Å—Ç—è
        supabase.table("users").insert({
            "telegram_id": user_id,
            "full_name": full_name,
            "status": "guest",
            "created_at": datetime.utcnow().isoformat(),
            "last_active": datetime.utcnow().isoformat()
        }).execute()

        await update.message.reply_text(
            f"–ü—Ä–∏–≤–µ—Ç, {full_name}! üëã\n"
            "–¢—ã –ø–æ–∫–∞ –≥–æ—Å—Ç—å –≤ –≥–æ—Ä–æ–¥–µ City_108. –†–∞—Å—Å–∫–∞–∂–∏ –Ω–µ–º–Ω–æ–≥–æ –æ —Å–µ–±–µ, —á—Ç–æ–±—ã —è –ø–æ–º–æ–≥ —Ç–µ–±–µ –Ω–∞–π—Ç–∏ —Å–≤–æ—ë –º–µ—Å—Ç–æ ‚ú®"
        )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    text = update.message.text

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤ –±–∞–∑–µ
    result = supabase.table("users").select("*").eq("telegram_id", user_id).execute()

    if not result.data:
        await update.message.reply_text(
            "–¢—ã –ø–æ–∫–∞ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω. –ù–∞–ø–∏—à–∏ /start, —á—Ç–æ–±—ã —è –º–æ–≥ —É–∑–Ω–∞—Ç—å —Ç–µ–±—è."
        )
        return

    user = result.data[0]
    name = user['full_name']

    await update.message.reply_text(
        f"{name}, —è —É—Å–ª—ã—à–∞–ª: ¬´{text}¬ª. –°–ø–∞—Å–∏–±–æ –∑–∞ –¥–æ–≤–µ—Ä–∏–µ! üôè"
    )

    # –í –±—É–¥—É—â–µ–º –º–æ–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—ã –≤ JSON-–ø–æ–ª–µ

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
if __name__ == '__main__':
    app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("–≠–≤–∏–∫ –∞–∫—Ç–∏–≤–µ–Ω.")
    app.run_polling()
